formatter: "asciidoc table"
output-values: {enabled: false, from: ""}
sort: { enabled: true, by: name }
sections: { hide: [requirements, resources, data-sources] }
settings:
  anchor: true
  color: true
  default: false
  description: true
  escape: true
  hide-empty: true
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: false
  sensitive: false
  type: true
output:
  file: "README.adoc"
  mode: replace
  template: |-
    // DO NOT EDIT THIS FILE DIRECTLY. IT IS GENERATED BY 'make docs'.
    // vim: ft=asciidoc
    :author: Jake Logemann
    :idprefix:
    :showtitle:
    :title: cloud

    ifdef::env-github[]
    :tip-caption: :bulb:
    :note-caption: :information_source:
    :important-caption: :heavy_exclamation_mark:
    :caution-caption: :fire:
    :warning-caption: :warning:
    endif::[]

    :terraform-docs: link:https://terraform-docs.io[terraform-docs]
    :terraform: link:https://terraform.io[terraform]
    :digitalocean: link:https://digitalocean.com[digitalocean]
    :nixos: link:https://nixos.org[nixos]
    :nix: link:https://nixos.org[nix]

    a {terraform} module to create a {nixos} droplet on {digitalocean}.

    {{ .Content }}

    == Getting Started

    1. install {terraform} and {terraform-docs}. run `./terraform.sh` to show available commands.

    2. run `./terraform.sh init` to fetch required providers.

    3. export `DIGITALOCEAN_TOKEN=...` (directly, or via the example `.envrc`) to set your credentials.

    4. plan a deployment with `./terraform.sh plan`.

    5. apply the plan with `./terraform.sh apply`.

    6. ssh to your host and enjoy! allow ~5-10 minutes to provision, try not to modify anything while its still provisioning (or just `tail -f /var/log/cloud-init-output.log`).

    7. clean up everything with `./terraform.sh destroy`.
