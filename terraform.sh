#!/usr/bin/env bash

# Fail on error, undefined variables, and non-zero exit codes in piped commands.
set -ueo pipefail

# Get the specified command or default to "help". If a command was specified,
# shift the arguments so that $@ will behave as expected.
readonly cmd="${1:-help}" && [[ $# -eq 0 ]] || shift

# Handle custom commands (first) or passthru to terraform if nothing matched.
case "$cmd" in
help | --help | -h | usage | wtf) echo -e "
  Usage: ./${0##*/} <command> [options]

  Minimalist wrapper for terraform written in bash. Most commands are passed
  directly to terraform, but some additional functionality is provided.

  Additional Commands:
    doc, docs     - run terraform-docs on this module.
    tag           - update the tag to the current commit.
    push-tags     - push tags to remote.

  Options:
    -h / --help   - shows this help message.
    -help         - shows terraform's help message.

  " && exit 0 ;;
# Tagging is strictly YYYY.MM.DD.
tag) exec git tag "$@" -fam "$(date +%Y.%m.%d)" "$(date +%Y.%m.%d)" ;;
push-tags) exec git push --tags --force --force-with-lease=HEAD ;;
# Documentation is generated by terraform-docs.
doc|docs) exec terraform-docs . ;;
# All other commands are passed to terraform directly without modification.
*) exec terraform "$cmd" "$@" ;;
esac
